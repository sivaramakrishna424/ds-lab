#define MAX 20
#include<stdio.h>
#include<ctype.h>
char postfix[MAX],a[MAX];
int j=0,top=-1;
int priority(char ch)
{
    if(ch=='^')
        return 3;
    else if(ch=='*' || ch=='/' || ch=='%')
        return 2;
    else if(ch=='+' || ch=='-')
        return 1;
    else
        return 0;
}
char pop()
{
    return a[top--];
}
void precedence(char ch)
{
    while(priority(ch)<=priority(a[top]))
        postfix[j++]=pop();
}
void push(char ch)
{
    a[++top]=ch;
}
int main()
{
    char infix[MAX],x,ch;
    int i;
    printf("enter the infix expression");
    scanf("%s",infix);
    i=0;
    while(infix[i]!='\0')
    {
        ch=infix[i];
        if(isalpha(ch) || isdigit(ch))
            postfix[j++]=ch;
        else
        {
            switch(ch)
            {
                case '(' : push(ch);
                           break;
                case '^' : 
                case '*' :
                case '%' :
                case '/' :
                case '+' :
                case '-' : precedence(ch);
                           push(ch);
                           break;
                case ')' : x=pop();
                           while(x!='(')
                           {
                               postfix[j++]=x;
                               x=pop();
                           }
                           break;
            }
        }
        i++;
    }
    while(top!=-1)
    {
        postfix[j++]=pop();
    }
    postfix[j]='\0';
    printf("the postfix expression of given infix expresion %s is %s",infix,postfix);
    return 0;
}
